<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.road.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.road.model.entity.User">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="loginName" jdbcType="VARCHAR" property="loginName" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="sex" jdbcType="TINYINT" property="sex" />
		<result column="age" jdbcType="TINYINT" property="age" />
		<result column="userType" jdbcType="TINYINT" property="userType" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="organizationId" jdbcType="INTEGER" property="organizationId" />
		<result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
	</resultMap>

    <resultMap id="userVoResultMap1" type="com.road.model.admin.vo.UserVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="loginname" property="loginname" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="age" property="age" jdbcType="TINYINT"/>
        <result column="usertype" property="usertype" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="organization_id" property="organizationId" jdbcType="INTEGER"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="organizationName" property="organizationName" jdbcType="VARCHAR"/>
        <collection property="rolesList" ofType="com.road.model.entity.Role">
            <id column="roleId" property="id"/>
            <result column="roleName" property="name"/>
        </collection>
    </resultMap>

	<sql id="Base_Column_List">
		id, loginName, name, password, sex, age, userType, status,
		organizationId, createDate,
		phone, email
	</sql>

	<select id="findUserById" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.road.model.entity.User">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_user (loginName, name, password,
		sex, age, userType,
		status, organizationId, createDate,
		phone, email)
		values (#{loginName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{sex,jdbcType=TINYINT}, #{age,jdbcType=TINYINT}, #{userType,jdbcType=TINYINT},
		#{status,jdbcType=TINYINT}, #{organizationId,jdbcType=INTEGER},
		#{createDate},
		#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.road.model.entity.User">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="loginName != null">
				loginName,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="userType != null">
				userType,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="organizationId != null">
				organizationId,
			</if>
			<if test="createDate != null">
				createDate,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=TINYINT},
			</if>
			<if test="age != null">
				#{age,jdbcType=TINYINT},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="organizationId != null">
				#{organizationId,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				#{createDate},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.road.model.entity.User">
		update t_user
		<set>
			<if test="loginName != null">
				loginName = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=TINYINT},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=TINYINT},
			</if>
			<if test="userType != null">
				userType = #{userType,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="organizationId != null">
				organizationId = #{organizationId,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				createDate = #{createDate,},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.road.model.entity.User">
		update t_user
		set loginName = #{loginName,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=TINYINT},
		age = #{age,jdbcType=TINYINT},
		userType = #{userType,jdbcType=TINYINT},
		status = #{status,jdbcType=TINYINT},
		organizationId = #{organizationId,jdbcType=INTEGER},
		createDate = #{createDate},
		phone = #{phone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="findUserByLoginName"  parameterType="java.lang.String"  resultMap="BaseResultMap"  useCache="true">
		select
		<include refid="Base_Column_List" />
		from t_user
		where loginName = #{value,jdbcType=VARCHAR}
	</select>

	<select id="findUserVoById"  resultType="com.road.model.admin.vo.UserVo"  parameterType="java.lang.Long" >

	</select>
</mapper>