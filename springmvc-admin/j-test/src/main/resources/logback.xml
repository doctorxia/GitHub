<?xml version="1.0" encoding="UTF-8"?>
<!-- 官方文档：http://logback.qos.ch/manual/appenders.html -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="false" scanPeriod="60 seconds" debug="true">

	<!-- 设置变量 -->
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="LOG_HOME" value="E:/log/netty/netty-2" />

	<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
	<property name="layout_pattern"
		value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n" />

	<!-- 日志分类 -->
	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 日志编码 -->
		<Encoding>UTF-8</Encoding>
		<!-- 日志输出格式 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${layout_pattern}</pattern>
		</encoder>
		<!-- 日志过滤器,只有info级别的日志才会显示到控制台 -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>

	<!-- 警告类型的日志 -->
	<appender name="WARNLOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<Append>true</Append>
		<Encoding>UTF-8</Encoding>
		<File>${LOG_HOME}/warn.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/warn.log.%d{yyyy-MM-dd}
			</fileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${layout_pattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>WARN</level>
		</filter>
	</appender>

	<!-- 按照每天生成日志文件 -->
	<appender name="INFOLOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<Encoding>UTF-8</Encoding>
		<File>${LOG_HOME}/info.log</File>
		<triggeringPolicy></triggeringPolicy>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<fileNamePattern>${LOG_HOME}/info-%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<!--日志文件保留天数 -->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>
		<!--日志文件最大的大小 ,如果上面为每分钟生成一个文件,则要注释这个 -->
		<!-- <triggeringPolicy -->
		<!-- class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"> -->
		<!-- <MaxFileSize>10MB</MaxFileSize> -->
		<!-- </triggeringPolicy> -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>

	
	<appender name="ERRORLOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<Append>true</Append>
		<Encoding>UTF-8</Encoding>
		<File>${LOG_HOME}/Error.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/error.log.%d{yyyy-MM-dd}
			</fileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${layout_pattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
	</appender>

	<!-- 日志输出级别 -->
	<root level="INFO">
		<appender-ref ref="INFOLOG" />
		<appender-ref ref="STDOUT" />
	</root>

</configuration>
